#pragma version 9

// This TEAL was generated by TEALScript v0.63.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// createApplication(address,address)void
//
// Creates the contract with initial addresses
//
// @param analyst - The address of who will review and approve asset insurance
// @param customer - The address of the person who will request the asset insurance evaluation
// @returns void
abi_route_createApplication:
	// customer: address
	txna ApplicationArgs 2
	dup
	len
	int 32
	==
	assert

	// analyst: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==
	assert

	// execute createApplication(address,address)void
	callsub createApplication
	int 1
	return

createApplication:
	proto 2 0

	// contracts/dapp_insurance.algo.ts:33
	// this.analyst.value = analyst
	byte 0x616e616c797374 // "analyst"
	frame_dig -1 // analyst: address
	app_global_put

	// contracts/dapp_insurance.algo.ts:34
	// this.customer.value = customer
	byte 0x637573746f6d6572 // "customer"
	frame_dig -2 // customer: address
	app_global_put

	// contracts/dapp_insurance.algo.ts:35
	// this.assetStatus.value = 'none'
	byte 0x6173736574537461747573 // "assetStatus"
	byte 0x00046e6f6e65
	app_global_put
	retsub

// registerAsset(string,uint64,string,string)void
//
// Allows customer to register an asset for insurance
//
// @param assetName - The name of the asset to insure
// @param assetType - The type of the asset to insure
// @param asssetValue - The value of the asset to insure
// @param assetDescription - The description of the asset to insure
// @returns void
abi_route_registerAsset:
	// assetDescription: string
	txna ApplicationArgs 4
	extract 2 0

	// assetValue: uint64
	txna ApplicationArgs 3
	btoi

	// assetType: string
	txna ApplicationArgs 2
	extract 2 0

	// assetName: string
	txna ApplicationArgs 1
	extract 2 0

	// execute registerAsset(string,uint64,string,string)void
	callsub registerAsset
	int 1
	return

registerAsset:
	proto 4 0

	// contracts/dapp_insurance.algo.ts:50
	// verifyTxn(this.txn, { sender: this.customer.value })
	// verify sender
	txn Sender
	byte 0x637573746f6d6572 // "customer"
	app_global_get
	==
	assert

	// contracts/dapp_insurance.algo.ts:51
	// assert(this.assetStatus.value === 'rejected' || this.assetStatus.value === 'none')
	byte 0x6173736574537461747573 // "assetStatus"
	app_global_get
	extract 2 0
	byte 0x72656a6563746564 // "rejected"
	==
	dup
	bnz skip_or0
	byte 0x6173736574537461747573 // "assetStatus"
	app_global_get
	extract 2 0
	byte 0x6e6f6e65 // "none"
	==
	||

skip_or0:
	assert

	// contracts/dapp_insurance.algo.ts:52
	// this.assetName.value = assetName
	byte 0x61737365744e616d65 // "assetName"
	frame_dig -1 // assetName: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts/dapp_insurance.algo.ts:53
	// this.assetType.value = assetType
	byte 0x617373657454797065 // "assetType"
	frame_dig -2 // assetType: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts/dapp_insurance.algo.ts:54
	// this.asssetValue.value = assetValue
	byte 0x61737373657456616c7565 // "asssetValue"
	frame_dig -3 // assetValue: uint64
	app_global_put

	// contracts/dapp_insurance.algo.ts:55
	// this.assetDescription.value = assetDescription
	byte 0x61737365744465736372697074696f6e // "assetDescription"
	frame_dig -4 // assetDescription: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts/dapp_insurance.algo.ts:56
	// this.assetStatus.value = 'requested'
	byte 0x6173736574537461747573 // "assetStatus"
	byte 0x0009726571756573746564
	app_global_put
	retsub

// reviewRequest(string,bool)void
//
// Allows customer to register an asset for insurance
//
// @param acceptance - The boolean value of whether the asset is accepted or not
// @returns void
abi_route_reviewRequest:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// comments: string
	txna ApplicationArgs 2
	extract 2 0

	// acceptance: bool
	txna ApplicationArgs 1
	dup
	len
	int 1
	==
	assert
	int 0
	getbit

	// execute reviewRequest(string,bool)void
	callsub reviewRequest
	int 1
	return

reviewRequest:
	proto 3 0

	// contracts/dapp_insurance.algo.ts:68
	// verifyTxn(this.txn, { sender: this.analyst.value })
	// verify sender
	txn Sender
	byte 0x616e616c797374 // "analyst"
	app_global_get
	==
	assert

	// contracts/dapp_insurance.algo.ts:69
	// assert(
	//       this.assetStatus.value === 'requested' ||
	//         this.assetStatus.value === 'none' ||
	//         this.assetStatus.value === 'rejected'
	//     )
	byte 0x6173736574537461747573 // "assetStatus"
	app_global_get
	extract 2 0
	byte 0x726571756573746564 // "requested"
	==
	dup
	bnz skip_or1
	byte 0x6173736574537461747573 // "assetStatus"
	app_global_get
	extract 2 0
	byte 0x6e6f6e65 // "none"
	==
	||

skip_or1:
	dup
	bnz skip_or2
	byte 0x6173736574537461747573 // "assetStatus"
	app_global_get
	extract 2 0
	byte 0x72656a6563746564 // "rejected"
	==
	||

skip_or2:
	assert

	// contracts/dapp_insurance.algo.ts:74
	// this.analystComments.value = comments
	byte 0x616e616c797374436f6d6d656e7473 // "analystComments"
	frame_dig -2 // comments: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// if0_condition
	// contracts/dapp_insurance.algo.ts:75
	// acceptance
	frame_dig -1 // acceptance: bool
	bz if0_else

	// if0_consequent
	// contracts/dapp_insurance.algo.ts:76
	// this.assetStatus.value = 'accepted'
	byte 0x6173736574537461747573 // "assetStatus"
	byte 0x00086163636570746564
	app_global_put

	// contracts/dapp_insurance.algo.ts:77
	// asaId = sendAssetCreation({
	//         configAssetTotal: 1,
	//         configAssetDecimals: 0,
	//         configAssetName: this.assetName.value,
	//         configAssetUnitName: 'INSUR',
	//         note: 'Token for asset: ' + this.assetName.value,
	//       })
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// contracts/dapp_insurance.algo.ts:78
	// configAssetTotal: 1
	int 1
	itxn_field ConfigAssetTotal

	// contracts/dapp_insurance.algo.ts:79
	// configAssetDecimals: 0
	int 0
	itxn_field ConfigAssetDecimals

	// contracts/dapp_insurance.algo.ts:80
	// configAssetName: this.assetName.value
	byte 0x61737365744e616d65 // "assetName"
	app_global_get
	extract 2 0
	itxn_field ConfigAssetName

	// contracts/dapp_insurance.algo.ts:81
	// configAssetUnitName: 'INSUR'
	byte 0x494e535552 // "INSUR"
	itxn_field ConfigAssetUnitName

	// contracts/dapp_insurance.algo.ts:82
	// note: 'Token for asset: ' + this.assetName.value
	byte 0x546f6b656e20666f722061737365743a20 // "Token for asset: "
	byte 0x61737365744e616d65 // "assetName"
	app_global_get
	extract 2 0
	concat
	itxn_field Note

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	frame_bury -3 // asaId: asset

	// contracts/dapp_insurance.algo.ts:84
	// this.asaId.value = asaId
	byte 0x6173614964 // "asaId"
	frame_dig -3 // asaId: asset
	app_global_put
	b if0_end

if0_else:
	// contracts/dapp_insurance.algo.ts:86
	// this.assetStatus.value = 'rejected'
	byte 0x6173736574537461747573 // "assetStatus"
	byte 0x000872656a6563746564
	app_global_put

if0_end:
	retsub

// receiveToken(axfer,asset)void
//
// Allows customer to register an asset for insurance
//
// @param asaId - The ID of the ASA to receive
// @param optin - The optin transaction to receive the ASA
// @returns void
abi_route_receiveToken:
	// optin: axfer
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int axfer
	==
	assert

	// asaId: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// execute receiveToken(axfer,asset)void
	callsub receiveToken
	int 1
	return

receiveToken:
	proto 2 0

	// contracts/dapp_insurance.algo.ts:100
	// verifyTxn(this.txn, { sender: this.customer.value })
	// verify sender
	txn Sender
	byte 0x637573746f6d6572 // "customer"
	app_global_get
	==
	assert

	// contracts/dapp_insurance.algo.ts:101
	// verifyTxn(optin, {
	//       sender: this.customer.value,
	//       assetReceiver: this.customer.value,
	//       xferAsset: asaId,
	//       assetAmount: 0,
	//     })
	// verify sender
	frame_dig -2 // optin: axfer
	gtxns Sender
	byte 0x637573746f6d6572 // "customer"
	app_global_get
	==
	assert

	// verify assetReceiver
	frame_dig -2 // optin: axfer
	gtxns AssetReceiver
	byte 0x637573746f6d6572 // "customer"
	app_global_get
	==
	assert

	// verify xferAsset
	frame_dig -2 // optin: axfer
	gtxns XferAsset
	frame_dig -1 // asaId: asset
	==
	assert

	// verify assetAmount
	frame_dig -2 // optin: axfer
	gtxns AssetAmount
	int 0
	==
	assert

	// contracts/dapp_insurance.algo.ts:107
	// assert(this.asaId.value === asaId)
	byte 0x6173614964 // "asaId"
	app_global_get
	frame_dig -1 // asaId: asset
	==
	assert

	// contracts/dapp_insurance.algo.ts:108
	// assert(this.assetStatus.value === 'accepted')
	byte 0x6173736574537461747573 // "assetStatus"
	app_global_get
	extract 2 0
	byte 0x6163636570746564 // "accepted"
	==
	assert

	// contracts/dapp_insurance.algo.ts:109
	// sendAssetTransfer({
	//       assetReceiver: this.customer.value,
	//       assetAmount: 1,
	//       xferAsset: asaId,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/dapp_insurance.algo.ts:110
	// assetReceiver: this.customer.value
	byte 0x637573746f6d6572 // "customer"
	app_global_get
	itxn_field AssetReceiver

	// contracts/dapp_insurance.algo.ts:111
	// assetAmount: 1
	int 1
	itxn_field AssetAmount

	// contracts/dapp_insurance.algo.ts:112
	// xferAsset: asaId
	frame_dig -1 // asaId: asset
	itxn_field XferAsset

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/dapp_insurance.algo.ts:114
	// this.assetStatus.value = 'insured'
	byte 0x6173736574537461747573 // "assetStatus"
	byte 0x0007696e7375726564
	app_global_put
	retsub

create_NoOp:
	method "createApplication(address,address)void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "registerAsset(string,string,uint64,string)void"
	method "reviewRequest(bool,string)void"
	method "receiveToken(asset,axfer)void"
	txna ApplicationArgs 0
	match abi_route_registerAsset abi_route_reviewRequest abi_route_receiveToken
	err